find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)
find_package(Glew REQUIRED)
find_package(CUDA REQUIRED)

SET(SIFTGPU_ENABLE_SERVER FALSE)
SET(SIFTGPU_ENABLE_OPENCL FALSE)
SET(SiftGPU_CUDA_Enable TRUE)
SET(SIFTGPU_ENABLE_CUDA TRUE)
SET(SIFTGPU_ENABLE_SSE TRUE)
SET(SIFTGPU_SSE_OPTIONS -march=core2 -mfpmath=sse)
SET(SIFTGPU_PREFER_GLUT TRUE)
SET(SIFTGPU_DISABLE_DEVIL FALSE)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -Wno-deprecated" )

IF(SIFTGPU_ENABLE_CUDA)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DCUDA_SIFTGPU_ENABLED" )
ENDIF(SIFTGPU_ENABLE_CUDA)

IF(SIFTGPU_ENABLE_SSE)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=core2 -mfpmath=sse" )
ENDIF(SIFTGPU_ENABLE_SSE)
  
IF(SIFTGPU_PREFER_GLUT)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DWINDOW_PREFER_GLUT" )
ENDIF(SIFTGPU_PREFER_GLUT)

IF(SIFTGPU_ENABLE_OPENCL)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DCL_SIFTGPU_ENABLED" )
ENDIF(SIFTGPU_ENABLE_OPENCL)

IF(APPLE)
  SET(LIBS_SIFTGPU )
ELSE(APPLE)
  SET(LIBS_SIFTGPU glut GL X11 )
ENDIF(APPLE)

IF(SIFTGPU_DISABLE_DEVIL)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DSIFTGPU_NO_DEVIL" )
ELSE(SIFTGPU_DISABLE_DEVIL)
  SET(LIBS_SIFTGPU ${LIBS_SIFTGPU} IL )
ENDIF(SIFTGPU_DISABLE_DEVIL)

if (GLEW_FOUND)
	include_directories( ${GLEW_INCLUDE_DIRS} )
	SET (GLEW_LIBRARIES GLEW)
endif (GLEW_FOUND)

macro(SIFT_GPU_ADD_STATIC_CUDA_LIBRARY TARGET_NAME)
    cuda_add_library(${TARGET_NAME} STATIC ${ARGN})
    set_target_properties(${TARGET_NAME} PROPERTIES FOLDER
            ${SIFT_GPU_TARGETS_ROOT_FOLDER}/${FOLDER_NAME})
endmacro(SIFT_GPU_ADD_STATIC_CUDA_LIBRARY)

set(SIFT_GPU_SOURCE_FILES
        ${SIFT_GPU_SOURCE_FILES}
        CuTexImage.cpp
        CuTexImage.h
        ProgramCU.cu
        ProgramCU.h
        PyramidCU.cpp
        PyramidCU.h
        SiftMatchCU.cpp
        SiftMatchCU.h
        )

SIFT_GPU_ADD_STATIC_CUDA_LIBRARY(siftgpu ${SIFT_GPU_SOURCE_FILES} SiftGPU.h FrameBufferObject.cpp GlobalUtil.cpp GLTexImage.cpp ProgramGLSL.cpp
        ProgramGPU.cpp ShaderMan.cpp SiftGPU.cpp SiftPyramid.cpp PyramidGL.cpp SiftMatch.cpp)

ADD_LIBRARY(siftgpu_gl STATIC FrameBufferObject.cpp GlobalUtil.cpp GLTexImage.cpp ProgramGLSL.cpp
            ProgramGPU.cpp ShaderMan.cpp SiftGPU.cpp SiftPyramid.cpp PyramidGL.cpp SiftMatch.cpp)

TARGET_LINK_LIBRARIES(siftgpu ${LIBS_SIFTGPU} ${GLEW_LIBRARIES} ${GLUT_LIBRARIES} ${OPENGL_LIBRARIES})

TARGET_INCLUDE_DIRECTORIES(siftgpu PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

#INSTALL(FILES SiftGPU.h DESTINATION include)
#INSTALL(TARGETS siftgpu DESTINATION lib )
